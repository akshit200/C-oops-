
//find last occurance of key or upper bound using binary search.
#include <iostream>
using namespace std;

int binary_search(int a[], int n,int key){

    int s=0,e=n-1,mid;
    int ans=-1;

    while(s<=e){
        mid = (s+e)/2;

        //last occcurance - slight change in binary search bcoz we want to find in the right part
        if(a[mid] == key){
            ans = mid;
            s = mid+1;
        }
        //key might be present on left half
        else if(a[mid] > key){
            e = mid-1;
        }
        else{
            s = mid + 1;
        }
    }

    return ans;
}
int main() {
    int a[] = {1,2,2,2,2,4,4};
    int n = sizeof(a)/sizeof(int);
    int key;
    cin>>key;

    int ans = binary_search(a,n,key);

    if(ans == -1){
        cout<<"Sadly!! Element not found :{";
    }else{

        cout<<"Last occurance of element is at index "<<ans;
    }

return 0;
}
